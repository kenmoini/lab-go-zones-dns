#!/bin/bash

set -x

###################################################################################
# VARIABLES
###################################################################################

CONTAINER_NAME="{{ service.name }}"
NETWORK_NAME="{{ service.network.name }}"
IP_ADDRESS="{{ service.network.ip }}"
CONTAINER_PORT="{{ service.network.port }}"

VOLUME_MOUNT_ONE="{{ service_containers_dir}}/${CONTAINER_NAME}/volumes/etc-config:/etc/go-zones/"
{% if enable_vendor_overrides|bool %}
VOLUME_MOUNT_TWO="-v {{ service_containers_dir}}/${CONTAINER_NAME}/volumes/vendor-config:/opt/app-root/vendor/bind/"
{% endif %}

CONTAINER_SOURCE="{{ container_image }}"

RESOURCE_LIMITS="-m {{ service.resources.limits.memory }}"

###################################################################################
# EXECUTION PREFLIGHT
###################################################################################

## Ensure there is an action arguement
if [ -z "$1" ]; then
  echo "Need action arguement of 'start', 'restart', or 'stop'!"
  echo "${0} start|stop|restart"
  exit 1
fi


################################################################################### SERVICE ACTION SWITCH
case $1 in

  ################################################################################# RESTART/STOP SERVICE
  "restart" | "stop" | "start")
    echo "Stopping container services if running..."

    echo "Killing ${CONTAINER_NAME} container..."
    /usr/bin/podman kill ${CONTAINER_NAME}

    echo "Removing ${CONTAINER_NAME} container..."
    /usr/bin/podman rm -f -i ${CONTAINER_NAME}
    ;;

esac

case $1 in

  ################################################################################# RESTART/START SERVICE
  "restart" | "start")
    sleep 3

    echo "Checking for stale network lock file..."
    FILE_CHECK="/var/lib/cni/networks/${NETWORK_NAME}/${IP_ADDRESS}"
    if [[ -f "$FILE_CHECK" ]]; then
        rm -f $FILE_CHECK
    fi

    echo "Starting container services..."

    # Deploy ${CONTAINER_NAME} container
    echo -e "Deploying ${CONTAINER_NAME}...\n"

    /usr/bin/podman run -d --name "${CONTAINER_NAME}" --privileged \
      --network "${NETWORK_NAME}" --ip "${IP_ADDRESS}" -p "${CONTAINER_PORT}" \
      -v ${VOLUME_MOUNT_ONE} {% if enable_vendor_overrides|bool %}-v ${VOLUME_MOUNT_TWO}{% endif %} \
      ${RESOURCE_LIMITS} ${CONTAINER_SOURCE}

    ;;

esac